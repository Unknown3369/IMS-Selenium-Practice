{"uid":"e9bc9c1e7f85c75d","name":"test_purchase_invoice","fullName":"PYTEST.tests.test_purchase_invoice#test_purchase_invoice","historyId":"44382be6605be98638e5687cf7ce76a6","time":{"start":1761819367931,"stop":1761819369893,"duration":1962},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: MicrosoftEdge=141.0.3537.99)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff653cb2605+51877]\n\tGetHandleVerifier [0x0x7ff653cb2664+51972]\n\tGetHandleVerifier [0x0x7ff653e68bf5+1847445]\n\t(No symbol) [0x0x7ff653a00e5f]\n\t(No symbol) [0x0x7ff653a974ec]\n\t(No symbol) [0x0x7ff653aaed0a]\n\t(No symbol) [0x0x7ff653a91df3]\n\t(No symbol) [0x0x7ff653a65b36]\n\t(No symbol) [0x0x7ff653a64d80]\n\t(No symbol) [0x0x7ff653a65973]\n\t(No symbol) [0x0x7ff653b2e4a5]\n\t(No symbol) [0x0x7ff653b2a75d]\n\tGetHandleVerifier [0x0x7ff653cdce43+226019]\n\tGetHandleVerifier [0x0x7ff653ccc011+156849]\n\tGetHandleVerifier [0x0x7ff653cd4509+190889]\n\tGetHandleVerifier [0x0x7ff653cb9744+80868]\n\tGetHandleVerifier [0x0x7ff653cb9893+81203]\n\tGetHandleVerifier [0x0x7ff653ca7e16+8886]\n\tBaseThreadInitThunk [0x0x7ffc3a9be8d7+23]\n\tRtlUserThreadStart [0x0x7ffc3b74c53c+44]","statusTrace":"driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"6269d19154ff29ecee24afac97f92500\")>\n\n    def test_purchase_invoice(driver:webdriver):\n       login_page = login(driver)\n       purchase_invoice = PurchaseInvoice(driver)\n>      login_page.perform_login(\"Testuser\", \"Test@1234\")\n\nPYTEST\\tests\\test_purchase_invoice.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPYTEST\\pages\\Login.py:24: in perform_login\n    username_box.clear()\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:155: in clear\n    self._execute(Command.CLEAR_ELEMENT)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001A13E521090>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...7ff653ca7e16+8886]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffc3a9be8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffc3b74c53c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: MicrosoftEdge=141.0.3537.99)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff653cb2605+51877]\nE       \tGetHandleVerifier [0x0x7ff653cb2664+51972]\nE       \tGetHandleVerifier [0x0x7ff653e68bf5+1847445]\nE       \t(No symbol) [0x0x7ff653a00e5f]\nE       \t(No symbol) [0x0x7ff653a974ec]\nE       \t(No symbol) [0x0x7ff653aaed0a]\nE       \t(No symbol) [0x0x7ff653a91df3]\nE       \t(No symbol) [0x0x7ff653a65b36]\nE       \t(No symbol) [0x0x7ff653a64d80]\nE       \t(No symbol) [0x0x7ff653a65973]\nE       \t(No symbol) [0x0x7ff653b2e4a5]\nE       \t(No symbol) [0x0x7ff653b2a75d]\nE       \tGetHandleVerifier [0x0x7ff653cdce43+226019]\nE       \tGetHandleVerifier [0x0x7ff653ccc011+156849]\nE       \tGetHandleVerifier [0x0x7ff653cd4509+190889]\nE       \tGetHandleVerifier [0x0x7ff653cb9744+80868]\nE       \tGetHandleVerifier [0x0x7ff653cb9893+81203]\nE       \tGetHandleVerifier [0x0x7ff653ca7e16+8886]\nE       \tBaseThreadInitThunk [0x0x7ffc3a9be8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffc3b74c53c+44]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1761819366669,"stop":1761819367930,"duration":1261},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"driver::0","time":{"start":1761819370065,"stop":1761819372199,"duration":2134},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"PYTEST.tests"},{"name":"suite","value":"test_purchase_invoice"},{"name":"host","value":"UnKnown"},{"name":"thread","value":"12548-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"PYTEST.tests.test_purchase_invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e9bc9c1e7f85c75d.json","parameterValues":[]}