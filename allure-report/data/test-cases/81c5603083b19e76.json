{"uid":"81c5603083b19e76","name":"test_sales_invoice","fullName":"PYTEST.tests.test_sales_invoice#test_sales_invoice","historyId":"d8138f6d284a9fe08affd8efac685700","time":{"start":1761903799928,"stop":1761903859560,"duration":59632},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7594b2605+51877]\n\tGetHandleVerifier [0x0x7ff7594b2664+51972]\n\tGetHandleVerifier [0x0x7ff759668bf5+1847445]\n\t(No symbol) [0x0x7ff75927045b]\n\t(No symbol) [0x0x7ff75927071b]\n\t(No symbol) [0x0x7ff7592b1927]\n\t(No symbol) [0x0x7ff75929216f]\n\t(No symbol) [0x0x7ff75926667b]\n\t(No symbol) [0x0x7ff7592af3d2]\n\t(No symbol) [0x0x7ff759291df3]\n\t(No symbol) [0x0x7ff759265b36]\n\t(No symbol) [0x0x7ff759264d80]\n\t(No symbol) [0x0x7ff759265973]\n\t(No symbol) [0x0x7ff75932e4a5]\n\t(No symbol) [0x0x7ff75932a75d]\n\tGetHandleVerifier [0x0x7ff7594dce43+226019]\n\tGetHandleVerifier [0x0x7ff7594cc011+156849]\n\tGetHandleVerifier [0x0x7ff7594d4509+190889]\n\tGetHandleVerifier [0x0x7ff7594b9744+80868]\n\tGetHandleVerifier [0x0x7ff7594b9893+81203]\n\tGetHandleVerifier [0x0x7ff7594a7e16+8886]\n\tBaseThreadInitThunk [0x0x7ffc3a9be8d7+23]\n\tRtlUserThreadStart [0x0x7ffc3b74c53c+44]","statusTrace":"driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"d45666cd632d46b430f314c562d3df70\")>\n\n    def test_sales_invoice(driver: webdriver):\n    \n       login_page = login(driver)\n       login_page.perform_login(\"Testuser\", \"Test@1234\")\n    \n       sales_invoice_page = sales_invoice(driver)\n       sales_invoice_page.sales_invoice_test(driver)\n    \n       ref_num = str(random.randint(1000, 9999))\n       ran_quantity = str(random.randint(1, 9999))\n    \n>      sales_invoice_page.sales_invoice_form_test(driver, ref_num, ran_quantity)\n\nPYTEST\\tests\\test_sales_invoice.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPYTEST\\pages\\Sales_invoice.py:75: in sales_invoice_form_test\n    customer_select =self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d45666cd632d46b430f314c562d3df70\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001FD64704F40>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7594b2605+51877]\nE       \tGetHandleVerifier [0x0x7ff7594b2664+51972]\nE       \tGetHandleVerifier [0x0x7ff759668bf5+1847445]\nE       \t(No symbol) [0x0x7ff75927045b]\nE       \t(No symbol) [0x0x7ff75927071b]\nE       \t(No symbol) [0x0x7ff7592b1927]\nE       \t(No symbol) [0x0x7ff75929216f]\nE       \t(No symbol) [0x0x7ff75926667b]\nE       \t(No symbol) [0x0x7ff7592af3d2]\nE       \t(No symbol) [0x0x7ff759291df3]\nE       \t(No symbol) [0x0x7ff759265b36]\nE       \t(No symbol) [0x0x7ff759264d80]\nE       \t(No symbol) [0x0x7ff759265973]\nE       \t(No symbol) [0x0x7ff75932e4a5]\nE       \t(No symbol) [0x0x7ff75932a75d]\nE       \tGetHandleVerifier [0x0x7ff7594dce43+226019]\nE       \tGetHandleVerifier [0x0x7ff7594cc011+156849]\nE       \tGetHandleVerifier [0x0x7ff7594d4509+190889]\nE       \tGetHandleVerifier [0x0x7ff7594b9744+80868]\nE       \tGetHandleVerifier [0x0x7ff7594b9893+81203]\nE       \tGetHandleVerifier [0x0x7ff7594a7e16+8886]\nE       \tBaseThreadInitThunk [0x0x7ffc3a9be8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffc3b74c53c+44]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1761903798724,"stop":1761903799928,"duration":1204},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7594b2605+51877]\n\tGetHandleVerifier [0x0x7ff7594b2664+51972]\n\tGetHandleVerifier [0x0x7ff759668bf5+1847445]\n\t(No symbol) [0x0x7ff75927045b]\n\t(No symbol) [0x0x7ff75927071b]\n\t(No symbol) [0x0x7ff7592b1927]\n\t(No symbol) [0x0x7ff75929216f]\n\t(No symbol) [0x0x7ff75926667b]\n\t(No symbol) [0x0x7ff7592af3d2]\n\t(No symbol) [0x0x7ff759291df3]\n\t(No symbol) [0x0x7ff759265b36]\n\t(No symbol) [0x0x7ff759264d80]\n\t(No symbol) [0x0x7ff759265973]\n\t(No symbol) [0x0x7ff75932e4a5]\n\t(No symbol) [0x0x7ff75932a75d]\n\tGetHandleVerifier [0x0x7ff7594dce43+226019]\n\tGetHandleVerifier [0x0x7ff7594cc011+156849]\n\tGetHandleVerifier [0x0x7ff7594d4509+190889]\n\tGetHandleVerifier [0x0x7ff7594b9744+80868]\n\tGetHandleVerifier [0x0x7ff7594b9893+81203]\n\tGetHandleVerifier [0x0x7ff7594a7e16+8886]\n\tBaseThreadInitThunk [0x0x7ffc3a9be8d7+23]\n\tRtlUserThreadStart [0x0x7ffc3b74c53c+44]","statusTrace":"driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"d45666cd632d46b430f314c562d3df70\")>\n\n    def test_sales_invoice(driver: webdriver):\n    \n       login_page = login(driver)\n       login_page.perform_login(\"Testuser\", \"Test@1234\")\n    \n       sales_invoice_page = sales_invoice(driver)\n       sales_invoice_page.sales_invoice_test(driver)\n    \n       ref_num = str(random.randint(1000, 9999))\n       ran_quantity = str(random.randint(1, 9999))\n    \n>      sales_invoice_page.sales_invoice_form_test(driver, ref_num, ran_quantity)\n\nPYTEST\\tests\\test_sales_invoice.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPYTEST\\pages\\Sales_invoice.py:75: in sales_invoice_form_test\n    customer_select =self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d45666cd632d46b430f314c562d3df70\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001FD64704F40>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7594b2605+51877]\nE       \tGetHandleVerifier [0x0x7ff7594b2664+51972]\nE       \tGetHandleVerifier [0x0x7ff759668bf5+1847445]\nE       \t(No symbol) [0x0x7ff75927045b]\nE       \t(No symbol) [0x0x7ff75927071b]\nE       \t(No symbol) [0x0x7ff7592b1927]\nE       \t(No symbol) [0x0x7ff75929216f]\nE       \t(No symbol) [0x0x7ff75926667b]\nE       \t(No symbol) [0x0x7ff7592af3d2]\nE       \t(No symbol) [0x0x7ff759291df3]\nE       \t(No symbol) [0x0x7ff759265b36]\nE       \t(No symbol) [0x0x7ff759264d80]\nE       \t(No symbol) [0x0x7ff759265973]\nE       \t(No symbol) [0x0x7ff75932e4a5]\nE       \t(No symbol) [0x0x7ff75932a75d]\nE       \tGetHandleVerifier [0x0x7ff7594dce43+226019]\nE       \tGetHandleVerifier [0x0x7ff7594cc011+156849]\nE       \tGetHandleVerifier [0x0x7ff7594d4509+190889]\nE       \tGetHandleVerifier [0x0x7ff7594b9744+80868]\nE       \tGetHandleVerifier [0x0x7ff7594b9893+81203]\nE       \tGetHandleVerifier [0x0x7ff7594a7e16+8886]\nE       \tBaseThreadInitThunk [0x0x7ffc3a9be8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffc3b74c53c+44]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"837cfbf3eb4cf235","name":"Screenshot_test_sales_invoice","source":"837cfbf3eb4cf235.png","type":"image/png","size":178735}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"driver::0","time":{"start":1761903859817,"stop":1761903862150,"duration":2333},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"PYTEST.tests"},{"name":"suite","value":"test_sales_invoice"},{"name":"host","value":"UnKnown"},{"name":"thread","value":"4512-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"PYTEST.tests.test_sales_invoice"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"81c5603083b19e76.json","parameterValues":[]}