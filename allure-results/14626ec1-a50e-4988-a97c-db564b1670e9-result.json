{"name": "test_add_prod", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"5eb007eb46a8c21487285cf56c429305\")>\n\n    def test_add_prod(driver: webdriver):\n       login_page = login(driver)\n       add_prod_page = Add_prod(driver)\n       login_page.perform_login(\"Testuser\", \"Test@1234\")\n       add_prod_page.masters_click_test(driver)\n>      add_prod_page.add_prod_test(driver, \"Testitemname\", \"Test1121\", \"Testdescription\", 100)\n\nPYTEST\\tests\\test_add_prod.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPYTEST\\pages\\Add_product.py:204: in add_prod_test\n    self.wait.until(EC.alert_is_present())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5eb007eb46a8c21487285cf56c429305\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x0000015D0C037F60>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "Screenshot_test_add_prod", "source": "7ef379a5-8587-4d39-a2d1-00d1ac1ca8ec-attachment.png", "type": "image/png"}], "start": 1761713800577, "stop": 1761713859713, "uuid": "e4ba8d7e-558f-4345-bcf8-b2db2711df0f", "historyId": "da0e0a69a4aaf240cb897a8f03332e54", "testCaseId": "da0e0a69a4aaf240cb897a8f03332e54", "fullName": "PYTEST.tests.test_add_prod#test_add_prod", "labels": [{"name": "parentSuite", "value": "PYTEST.tests"}, {"name": "suite", "value": "test_add_prod"}, {"name": "host", "value": "UnKnown"}, {"name": "thread", "value": "9796-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "PYTEST.tests.test_add_prod"}], "titlePath": ["PYTEST", "tests", "test_add_prod.py"]}